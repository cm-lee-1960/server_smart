from monitor.models import Phone

from logs.models import StatusLog
from datetime import datetime, timedelta
from management.models import MessageConfig


########################################################################################################################
# 백그라운드 스케쥴러 작업을 관리하는 모듈
# ----------------------------------------------------------------------------------------------------------------------
# 2022.03.27 - 백그라운드 스케쥴러 작업 모듈 작성 및 테스트
#            - 향후 측정마감이나 텔레그램 커맨드 핸들러 등록 등 백그라운드 작업 등록에 사용할 예정임
# 2022.06.13 - 매주 월요일 감시가 중지되어 있으면 자동으로 사작한다.
#
########################################################################################################################

# ----------------------------------------------------------------------------------------------------------------------
# 측정이 종료되었는지 확인한다.
# ----------------------------------------------------------------------------------------------------------------------
def measuring_end_check():
    """단말이 측정이 종료되었는지 확인한다.
        - (행정동) 콜 카운트가 54콜 이상이고, 최종 위치보고시간 이후 2~3분이 지났을 경우
        - (인빌딩) 요구사항 세부내역 확인
    """
    pass
    # qs = Phone.objects.all()
    # for phone in qs:
    #     print(phone)


# @db_auto_reconnect
# def telegram_command_handler():
#     command_handler()

# ----------------------------------------------------------------------------------------------------------------------
# 2주전 로그내역을 삭제한다.
# ----------------------------------------------------------------------------------------------------------------------
def delete_logs_before_week():
    """2주전 로그내역을 삭제하는 함수"""
    base_date = datetime.today() - timedelta(days=7)
    qs = StatusLog.objects.filter(create_datetime__lt=base_date)
    if qs.exists():
        qs.delete()

# ----------------------------------------------------------------------------------------------------------------------
# 매주 월요일 감시가 중지되어 있으면 자동으로 사작한다.
# ----------------------------------------------------------------------------------------------------------------------
def start_monitoring():
    # 0	Monday
    # 1	Tuesday
    # 2	Wednesday
    # 3	Thursday
    # 4	Friday
    # 5	Saturday
    # 6	Sunday
    days = ["월요일", "화요일", "수요일", "목요일", "금요일", "토요일", "일요일"]
    r = datetime.datetime.today().weekday()
    if days[r] == "월요일":
        msgcfg = MessageConfig.objects.all()[0]
        if msgcfg.ALL is False:
            msgcfg.ALL = True
            msgcfg.save()